/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ceutec.clasesemana7repaso;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.*; //lectura de texto y escritura 
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author enzoa
 */
public class ClaseSemana7RepasoJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClaseSemana7RepasoJFrame
     */
    public ClaseSemana7RepasoJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void Limpiar(){
        jtfCuenta.setText("");
        jtfNombre.setText("");
        jtfAcum.setText("");
        jtfExamen.setText("");
        jtfCuenta.requestFocus(); //focus de un solo en este elemento
    }
    
    @SuppressWarnings("unchecked")
   
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfCuenta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfAcum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfExamen = new javax.swing.JTextField();
        jbImportar = new javax.swing.JButton();
        jbAgregar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbExportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAlumnos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Clase Semana 7 Repaso JFrame");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Cuenta:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Acum:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Examen:");

        jbImportar.setText("Importar");
        jbImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImportarActionPerformed(evt);
            }
        });

        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbExportar.setText("Exportar");
        jbExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExportarActionPerformed(evt);
            }
        });

        jtAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuenta", "Nombre", "Acumulado", "Examen", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtAlumnos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jtfCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfAcum, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jtfExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbImportar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfNombre)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfAcum)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfExamen)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbImportar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImportarActionPerformed
        // TODO add your handling code here:
        try{
            String ruta = "C:\\Users\\enzoa\\OneDrive\\Documents\\Informatica Ceutec\\Tri(abril 2024)\\Programacion 2\\PracticaFinal\\semana7.txt"; //ruta
            File fichero = new File(ruta); //archivo que leeremos, se crea objeto de File a raiz de una ruta 
            
            //bufferedreader
            BufferedReader br = new BufferedReader(new FileReader(fichero));
            String linea;
            String[] linea2;
            
            //modelo de tabla
            DefaultTableModel model = (DefaultTableModel) jtAlumnos.getModel();
            
            //lectura de archivo
            while((linea = br.readLine()) != null){
                linea2 = linea.split(",");
                model.addRow(new Object[]{
                    linea2[0],
                    linea2[1],
                    linea2[2],
                    linea2[3],
                    linea2[4],
                });
            }
            br.close();
            JOptionPane.showMessageDialog(this, "Informacion obtenida de archivo"); 
        
        }

        catch(IOException ioe){
            ioe.getStackTrace();
        }
    }//GEN-LAST:event_jbImportarActionPerformed

    private void jbExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExportarActionPerformed
        // TODO add your handling code here:
        
        try{
            FileNameExtensionFilter filter = new FileNameExtensionFilter(".txt", "txt");
            jFileChooser.setFileFilter(filter); 

            int seleccion = this.jFileChooser.showOpenDialog(this); // abrimos el file dialog y escogemos algo
            String file = "";

            if(seleccion == jFileChooser.APPROVE_OPTION){ //si escogimos en efecto un archivo 
                File temp = jFileChooser.getSelectedFile(); //guardamos el archivo seleccionado 
                file = temp.getAbsolutePath(); //guardamos absolute path en file
            }
            File fichero = new File(file); //el fichero ha sido creado

            if(!fichero.exists()){
                fichero.createNewFile();
            }
            
            //una vez que el archivo no existia y se creo o si ya existia pues procedemos a escribir
            BufferedWriter bw = new BufferedWriter(new FileWriter(fichero, false)); //objecto bw que servira para escribir en archivo fichero 
            
            //tabla
            DefaultTableModel model = (DefaultTableModel) jtAlumnos.getModel();
            for(int i=0; i<model.getRowCount(); i++){
                String line = model.getValueAt(i, 0).toString() + ","
                        + model.getValueAt(i, 1).toString() + ","
                        + model.getValueAt(i, 2).toString() + ","
                        + model.getValueAt(i, 3).toString() + ","
                        + model.getValueAt(i, 4).toString() + "\n";
                bw.write(line);
            }
            bw.close();
            JOptionPane.showMessageDialog(this, "Informacion guardada correctamente");
        }
        
        catch(IOException ioe){
            ioe.getStackTrace();
        }

        
        
    }//GEN-LAST:event_jbExportarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel model = (DefaultTableModel) jtAlumnos.getModel();
            if(jtAlumnos.getSelectedRow() >= 0){
                model.removeRow(jtAlumnos.getSelectedRow());
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "You have made a mistake kiddo", "Error / Exception", JOptionPane.ERROR_MESSAGE);
        }
            
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        try{
            //declaraciones
            int verificar=0; //vamos a usar esto para verificar si el registro es repetido
            int index=0; //vamos a usar esto para ver en que parte de la tabla estamos 
            Alumno alumno = new Alumno("",0,0,0); //objeto vacio que llenaremos pronto
            
            //entradas
            alumno.setNombre(jtfNombre.getText());
            alumno.setCuenta(Integer.parseInt(jtfCuenta.getText()));
            alumno.setExamen(Integer.parseInt(jtfExamen.getText()));
            alumno.setAcumulado(Integer.parseInt(jtfAcum.getText()));
            
            //crear variable de tablemodel 
            DefaultTableModel model = (DefaultTableModel) jtAlumnos.getModel();
            
            //revisar en tabla si nuestro alumno existe 
            for(int i=0; i<model.getRowCount(); i++){
                int cuenta = Integer.parseInt(model.getValueAt(i, 0).toString()); //object -> string -> integer
                
                if(cuenta == alumno.getCuenta()){
                    verificar++;
                    index = i;
                }
            }
            
            if(verificar == 0){
                model.addRow(new Object[]{ //tablemodel expects an array of objects to enter the row. 
                   alumno.getCuenta(),
                   alumno.getNombre(),
                   alumno.getAcumulado(),
                   alumno.getExamen(),
                   alumno.calcularNotaFinal(),
                });
            }
            else{
                JOptionPane.showMessageDialog(this, "Se encontro cuenta y se procedera a sobreescribir en ella");
                model.setValueAt(alumno.getNombre(), index, 1);
                model.setValueAt(alumno.getAcumulado(), index, 2);
                model.setValueAt(alumno.getExamen(), index, 3);
                model.setValueAt(alumno.calcularNotaFinal(), index, 4);
                
            }
            Limpiar();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "You have made a mistake kiddo", "Error / Exception", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        
    }//GEN-LAST:event_jbAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClaseSemana7RepasoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClaseSemana7RepasoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClaseSemana7RepasoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClaseSemana7RepasoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClaseSemana7RepasoJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbExportar;
    private javax.swing.JButton jbImportar;
    private javax.swing.JTable jtAlumnos;
    private javax.swing.JTextField jtfAcum;
    private javax.swing.JTextField jtfCuenta;
    private javax.swing.JTextField jtfExamen;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables
}
